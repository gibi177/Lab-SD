*CODIGO SOMADOR COMPLETO*

--Descricao: Um somador completo e um componente que faz a adicao de 3 inputs binarios.

-- ***********************************
-- Circuito:Somador completo
-- A Entrada 1
-- B Entrada 2
-- Cin Entrada 3
-- S Saida 1
-- Cout Saida 2

-- ***********************************

--Bibliotecas
library IEEE;
use ieee.std_logic_1164.ALL;

--Entidade
entity SomadorCompleto is
   port ( 
      A,B,Cin: in STD_LOGIC;
      S,Cout: out STD_LOGIC
   );
end SomadorCompleto;

--Arquitetura
architecture arqsomador of SomadorCompleto is
begin
   S <= A XOR B XOR Cin;
   Cout <= (A AND B) OR (A AND Cin) OR (B AND Cin);
end arqsomador

*CODIGO TB_SOMADORCOMPLETO

-- **************
-- Testbench para simulacao funcional do
-- Circuito: Somador completo
-- A Entrada 1
-- B Entrada 2
-- Cin Entrada 3
-- S Saida 1
-- Cout Saida 2

-- ***********************************

-- ENTITY ( Entidade )
-- testbench1 uma entidade sem pinos de entrada e saida
entity testbench1 is end ;

-- Testbench para SomadorCompleto.vhd
-- Validacao assincrona

--Bibliotecas
library IEEE;
use ieee.std_logic_1164.ALL;
use std . textio . all ;


--Arquitetura
architecture tb_SomadorCompleto of testbench1 is

--Declaracao do componente SomadorCompleto, referente a entidade do arquivo SomadorCompleto.vhd

component SomadorCompleto
   port ( 
      A,B,Cin: in STD_LOGIC;
      S,Cout: out STD_LOGIC
   );
end component;

--Sinais de entrada
signal A_tb, B_tb, Cin_tb : std_logic;

--Sinais de saida
signal S, Cout : std_logic;

begin
teste: SomadorCompleto port map (A => A_tb, B => B_tb, Cin => Cin_tb, S => S, Cout => Cout);

--Implementacao do processo de estimulo
estimulo : process
begin

-- Estimulos de entrada
   A_tb <= '0';
   B_tb <= '0';
   Cin_tb <= '0';
   wait for 10 ns;

   A_tb <= '0';
   B_tb <= '0';
   Cin_tb <= '1';
   wait for 10 ns;

   A_tb <= '0';
   B_tb <= '1';
   Cin_tb <= '0';
   wait for 10 ns;

   A_tb <= '0';
   B_tb <= '1';
   Cin_tb <= '1';
   wait for 10 ns;

   A_tb <= '1';
   B_tb <= '0';
   Cin_tb <= '0';
   wait for 10 ns;

   A_tb <= '1';
   B_tb <= '0';
   Cin_tb <= '1';
   wait for 10 ns;

   A_tb <= '1';
   B_tb <= '1';
   Cin_tb <= '0';
   wait for 10 ns;

   A_tb <= '1';
   B_tb <= '1';
   Cin_tb <= '1';
   wait for 10 ns;

   --Finaliza a simulacao
   wait;

end process estimulo;
end tb_SomadorCompleto;

*CODIGO MULTIPLEXADOR*

--Descricao: Um multiplexador e um dispositivo digital que seleciona uma de varias fontes de dados e a direciona para um unico canal de saida.

-- ***********************************
-- Circuito: Multiplexador
-- D0 Entrada 1
-- D1 Entrada 2
-- D2 Entrada 3
-- D3 Entrada 4
-- Seletor S (S0 e S1) Entrada de selecao
-- Y Saida 1

-- ***********************************


--Bibliotecas
library IEEE;
use ieee.std_logic_1164.ALL;

--Entidade
entity Multiplexador is
   port ( 
      D0,D1,D2,D3: in std_logic;      --Entrada de 4 bits
      S0,S1: in std_logic;            --Seletor de 2 bits
      Y: out std_logic                --Saida
   );
end Multiplexador;


--Arquitetura
architecture arqmultiplexador of Multiplexador is
begin

   process (D0,D1,D2,D3,S0,S1)
   begin

      --Combinar S de forma a selecionar um D diferente a cada combinacao
      if (S0 = '0' and S1 = '0') then
         Y <= D0;
      elsif (S0 = '0' and S1 = '1') then
         Y <= D1;
      elsif (S0 = '1' and S1 = '0') then
         Y <= D2;
      else
         Y <= D3;
      end if;
         
   end process;
end arqmultiplexador;

*CODIGO TB_MULTIPLEXADOR

-- *****************************
-- Testbench para simulacao funcional do
-- Circuito: Multiplexador
-- D0 Entrada 1
-- D1 Entrada 2
-- D2 Entrada 3
-- D3 Entrada 4
-- Seletor S (S0 e S1) Entrada de selecao
-- Y Saida 1

-- *****************************

-- ENTITY ( Entidade )
-- testbench2 uma entidade sem pinos de entrada e saida
entity testbench2 is end ;

-- Testbench para Multiplexador.vhd
-- Validacao assincrona

--Bibliotecas
library IEEE;
use ieee.std_logic_1164.ALL;
use std . textio . all ;


--Arquitetura
architecture tb_Multiplexador of testbench2 is

--Declaracao do componente Multiplexador, referente a entidade do arquivo Multiplexador.vhd

component Multiplexador
   port ( 
      D0,D1,D2,D3: in std_logic;      --Entrada de 4 bits
      S0,S1: in std_logic;            --Seletor de 2 bits
      Y: out std_logic               --Saida
   );
end component;

--Inputs
signal D0,D1,D2,D3 : std_logic := '0';
signal S0,S1 : std_logic := '0';
 
--Outputs
   signal Y : std_logic;

begin
   teste: Multiplexador port map (D0 => D0, D1 => D1, D2 => D2, D3 => D3, S0 => S0, S1 => S1, Y => Y);

   --Implementacao do processo de estimulo
   estimulo : process
   begin

      --Esperar por 10 ns.
      wait for 10 ns; 
      
      --Definicao das entradas
      D0 <= '0';
      D1 <= '1';
      D2 <= '0';
      D3 <= '1';

      --Mudando S0 e S1
      S0 <= '0'; S1 <= '0'; -- Seleciona D0
      wait for 10 ns;

      S0 <= '0'; S1 <= '1'; -- Seleciona D1
      wait for 10 ns;

      S0 <= '1'; S1 <= '0'; -- Seleciona D2
      wait for 10 ns;

      S0 <= '1'; S1 <= '1'; -- Seleciona D3
      wait for 10 ns;
   
      --Finaliza a simulacao
      wait; 

   end process estimulo;
end tb_Multiplexador;
